// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrderManagement.InvoiceService.Data;

#nullable disable

namespace OrderManagement.InvoiceService.Migrations
{
    [DbContext(typeof(InvoiceContext))]
    partial class InvoiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrderManagement.InvoiceService.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamptz")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid")
                        .HasColumnName("customer_id");

                    b.Property<string>("ExternalInvoiceId")
                        .HasColumnType("text")
                        .HasColumnName("external_invoice_id");

                    b.Property<string>("ExternalReference")
                        .HasColumnType("text")
                        .HasColumnName("external_reference");

                    b.Property<string>("FailureReason")
                        .HasColumnType("text")
                        .HasColumnName("failure_reason");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("invoice_number");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_id");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("timestamptz")
                        .HasColumnName("processed_at");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamptz")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_invoices");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("ix_invoices_customer_id");

                    b.HasIndex("InvoiceNumber")
                        .IsUnique()
                        .HasDatabaseName("ix_invoices_invoice_number");

                    b.HasIndex("OrderId")
                        .IsUnique()
                        .HasDatabaseName("ix_invoices_order_id");

                    b.HasIndex("Status")
                        .HasDatabaseName("ix_invoices_status");

                    b.ToTable("invoices", (string)null);
                });

            modelBuilder.Entity("OrderManagement.InvoiceService.Models.InvoiceItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamptz")
                        .HasColumnName("created_at");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uuid")
                        .HasColumnName("invoice_id");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("product_name");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("unit_price");

                    b.HasKey("Id")
                        .HasName("pk_invoice_items");

                    b.HasIndex("InvoiceId")
                        .HasDatabaseName("ix_invoice_items_invoice_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_invoice_items_product_id");

                    b.ToTable("invoice_items", (string)null);
                });

            modelBuilder.Entity("OrderManagement.InvoiceService.Models.InvoiceItem", b =>
                {
                    b.HasOne("OrderManagement.InvoiceService.Models.Invoice", null)
                        .WithMany("Items")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_invoice_items_invoices_invoice_id");
                });

            modelBuilder.Entity("OrderManagement.InvoiceService.Models.Invoice", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
